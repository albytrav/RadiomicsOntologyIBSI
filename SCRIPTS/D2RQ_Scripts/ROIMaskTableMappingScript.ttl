## MAPPING SCRIPT FOR ROI MASK TABLE


## WE INCLUDE THE ONTOLOGIES WE NEED

@prefix map: <> .
@prefix roo:<http://www.cancerdata.org/roo/>.
@prefix ncit:<http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix d2rq: <http://www.wiwiss.fu-berlin.de/suhl/bizer/D2RQ/0.1#> .
@prefix ro:<http://www.radiomics.org/RO/>.

# we need to specify where are our data. We have different tables

map:database a d2rq:Database;
	d2rq:jdbcDriver "org.postgresql.Driver";
	d2rq:jdbcDSN "jdbc:postgresql://localhost:5432/Radiomics_Ontology";
	d2rq:username "postgres";
	d2rq:password "postgres";
	.

# Table ROI MASK

# mapping the concept of ROI Space  (SAME URI AS IMAGE SPACE TABLE)

map:roimask_obj a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "roimask_@@roimasktable.roimask@@";
	d2rq:class ro:OH8W;
     .

# roi mask label

map:roimask_label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:roimask_obj;
	d2rq:property rdfs:label;
	d2rq:pattern "roimask #@@roimasktable.roimasklabel@@";
	d2rq:datatype xsd:String;
	.

	
#mapping the concept of ROI type

map:roitype_obj a d2rq:ClassMap; 
	d2rq:dataStorage map:database;
	d2rq:uriPattern "roitype_@@roimasktable.roitype@@";
	.

map:roitype_uri a d2rq:PropertyBridge;
 	d2rq:belongsToClassMap map:roitype_obj;
	d2rq:property rdf:type;
	d2rq:uriColumn "roimasktable.roitype";
	d2rq:translateWith map:roitypeMapping;
	.
	
map:roitypeMapping a d2rq:TranslationTable;
	d2rq:translation [ d2rq:databaseValue "GTVp"; d2rq:rdfValue roo:100006; ];
	.

#roi type label

map:roitype_label a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:roitype_obj;
	d2rq:property rdfs:label;
	d2rq:pattern "roitype #@@roimasktable.roitypelabel@@";
	d2rq:datatype xsd:String;
	.


# mapping the concept of segmentation method

map:segmentation_obj a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "segmentation_@@roimasktable.segmentation@@";
	d2rq:class ro:LBTE; 
	.

# mapping the predicate has_segmentation method (ROIMask has_segmentation method)

map:hassegmethod a d2rq:PropertyBridge;
    d2rq:belongsToClassMap map:roimask_obj;
	d2rq:property ro:P00092; # has_segmentation_method
	d2rq:refersToClassMap map:segmentation_obj;
	.

#mapping the concept of voxel dimension X

map:voxeldimx_obj a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "dimx_@@roimasktable.dimensionx@@";
	d2rq:class ro:KBWK;
	.
#mapping the concept of voxel dimension Y

map:voxeldimy_obj a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "dimy_@@roimasktable.dimensiony@@";
	d2rq:class ro:Z231;
        .
#mapping the concept of voxel dimension Z

map:voxeldimz_obj a d2rq:ClassMap;
	d2rq:dataStorage map:database;
	d2rq:uriPattern "dimx_@@roimasktable.dimensionz@@";
	d2rq:class ro:XLB5;
	.

# predicate between roi mask and voxeldimx 


map:hasdimx a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:roimask_obj;
	d2rq:refersToClassMap map:voxeldimx_obj;
	d2rq:property ro:P00118 #has_voxeldimensionX;
	.

map:hasdimy a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:roimask_obj;
	d2rq:refersToClassMap map:voxeldimy_obj;
	d2rq:property ro:P00123;
	.

# predicate between roi mask and voxeldimz 

map:hasdimz a d2rq:PropertyBridge;
	d2rq:belongsToClassMap map:roimask_obj;
	d2rq:refersToClassMap map:voxeldimz_obj;
	d2rq:property ro:P00149;
	.